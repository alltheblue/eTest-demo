[{"active":true,"audible":false,"autoDiscardable":true,"discarded":false,"favIconUrl":"https://alltheblue.github.io/docs/img/icon.ico","groupId":-1,"height":751,"highlighted":true,"id":83958846,"incognito":true,"index":0,"mutedInfo":{"muted":false},"pinned":false,"selected":true,"status":"complete","title":"eTest-集成测试","url":"https://alltheblue.github.io/docs/#/","width":1196,"windowId":83958845,"action":"start","cookies":[{"domain":".alltheblue.github.io","expirationDate":1720780920,"hostOnly":false,"httpOnly":false,"name":"Hm_lvt_6945ed53b4af93b07dce4fc30c1c627c","path":"/docs/#/","sameSite":"unspecified","secure":false,"session":false,"storeId":"0","value":"1688090290,1689074856"},{"domain":".alltheblue.github.io","hostOnly":false,"httpOnly":false,"name":"Hm_lpvt_6945ed53b4af93b07dce4fc30c1c627c","path":"/docs/#/","sameSite":"unspecified","secure":false,"session":true,"storeId":"0","value":"1689244921"},{"domain":".alltheblue.github.io","expirationDate":1720610856,"hostOnly":false,"httpOnly":false,"name":"Hm_lvt_6945ed53b4af93b07dce4fc30c1c627c","path":"/","sameSite":"unspecified","secure":false,"session":false,"storeId":"0","value":"1688090290,1689074856"},{"domain":".alltheblue.github.io","hostOnly":false,"httpOnly":false,"name":"Hm_lpvt_6945ed53b4af93b07dce4fc30c1c627c","path":"/","sameSite":"unspecified","secure":false,"session":true,"storeId":"0","value":"1689074856"}],"indexNum":0,"date":1689244945296,"localStorage":{"Hm_lvt_6945ed53b4af93b07dce4fc30c1c627c":"1720780941186|1689244941","docsify.search.expires":"1689331342694","docsify.search.index":"{\"/README\":{\"#/README?id=etestv100\":{\"slug\":\"#/README?id=etestv100\",\"title\":\"eTest<small>V1.0.0</small>\",\"body\":\"一个简单易用的集成测试框架\\n\\n\\n\\n\\n**0 代码，自动化测试**\\n\\n\\n**完善的测试报告**\\n\\n\\n**强大的扩展能力**\\n\\n\\n**自动化运行定时任务以及测试结果推送机制**\\n\\n\\n\\n\\n\\n[下载链接 🔗](https://github.com/alltheblue/docs/releases)\\n\\n\\n[官网链接 🔗](https://alltheblue.github.io/docs/#/application/example)\\n\\n\\n[视频链接 🔗](https://www.bilibili.com/video/BV13P411f7pk/?vd_source=6b8d8a92f183f64ff070132f852c206f)\\n\\n\\n\"}},\"/./application/plugin\":{\"#/./application/plugin?id=%e6%89%a9%e5%b1%95%e7%ae%a1%e7%90%86\":{\"slug\":\"#/./application/plugin?id=%e6%89%a9%e5%b1%95%e7%ae%a1%e7%90%86\",\"title\":\"扩展管理\",\"body\":\"为了增强 ETE、API、UI 测试功能，满足更多的测试场景，我们引入了扩展功能，为方便测试自身特定的场景，可以自定义一些测试函数、插件来满足需求；通过可插拔的使用方式，强大的扩展能力，全方位覆盖测试场景。\\n\"},\"#/./application/plugin?id=%e5%87%bd%e6%95%b0%e7%ae%a1%e7%90%86\":{\"slug\":\"#/./application/plugin?id=%e5%87%bd%e6%95%b0%e7%ae%a1%e7%90%86\",\"title\":\"函数管理\",\"body\":\"我们在系统内置了一些常见的函数，这些函数是不能修改的，如果还是满足不了用户需求，我们开放了自定义函数功能，开发者只需要按照要求编写自己需要的函数即可\\n\\n/**\\n * [myselfFun 自定义取值函数]\\n * @version                           1.0\\n * @param    {[object]}                 config [需要修改变量的参数]\\n * @return   {[string||number]}     [必须有返回值返回值会作为当前执行参数信息]\\n */\\nfunction myselfFun(config) {\\n    //todo something\\n    return item;\\n}\"},\"#/./application/plugin?id=%e8%87%aa%e5%ae%9a%e4%b9%89%e6%8f%92%e4%bb%b6\":{\"slug\":\"#/./application/plugin?id=%e8%87%aa%e5%ae%9a%e4%b9%89%e6%8f%92%e4%bb%b6\",\"title\":\"自定义插件\",\"body\":\"插件功能我们为了开发者可以对每一步测试都可以做操作，特地引入了`webpack`使用的`tapable`来管理每一步测试，向外暴露了大量的生命周期，开发者可以根据自身需要自定义自己的插件，以满足测试场景，增强测试功能。\\n\\nETE\\nETE 插件执行流程图\\n![ETE](../img/plugin/ete.jpeg)\\n\\n生命周期钩子\\n\\n\\n初始化参数前(initBefore)：自定义是否需要执行、 自定义 api、 修改配置参数(设置 无头模式，性能分析，行为快照，开启调试，高就配置，插件，超时时间)。\\n\\n\\n初始化参数后(initAfter)：自定义是否需要执行、 自定义 api、修改配置参数(设置 无头模式，性能分析，行为快照，开启调试，高就配置，插件，超时时间)。\\n\\n\\n单步执行前(stepBefore)：单个定义过滤执行用例（满足条件）、单个修改参数（在文件中查找）、链接数据库断言、单个自定义断言、自定义 api。\\n\\n\\n单步执行后(stepAfter)：单个修改断言、单个替换断言、链接数据库断言、自定义 api。\\n\\n\\n报告&推送消息前(resultBefore)：批量修改测试报告、批量修改推送信息、定义推送规则、自定义推送 api\\n\\n\\n报告&推送消息后(resultAfter)：自定义 api\\n\\n\\n\\nexample\\nfunction myselfPlugin(config, callBack) {\\n    const itemInfor = {\\n        config: config.config,\\n        params: config.item,\\n        sendNotice: false,\\n        report: '',\\n        isEllipsis: false,\\n        isReplace: false\\n    };\\n    callBack(null, itemInfor);\\n}\\n参数\\nconfig\\n\\ncallBack(param1,param2) `tapable`暴露的周期函数\\nparam1\\n\\nparam2(插件修改返回值)\\n\\nAPI\\nAPI 插件执行流程图\\n![api](../img/plugin/api.jpeg)\\n\\n生命周期钩子\\n\\n\\n初始化参数前(initBefore)：自定义是否需要执行、 自定义 api、 修改配置参数(设置 无头模式，性能分析，行为快照，开启调试，高就配置，插件，超时时间)。\\n\\n\\n单步执行前(stepBefore)：单个定义过滤执行用例（满足条件）、单个修改参数（在文件中查找）、链接数据库断言、单个自定义断言、自定义 api。\\n\\n\\n完成参数初始化且请求前(requesBefore):修改请求头，请求体，或终止操作\\n\\n\\n请求返回后(requestAfter):修改返回值\\n\\n\\n单步执行后(stepAfter)：单个修改断言、单个替换断言、链接数据库断言、自定义 api。\\n\\n\\n生成报告&发送消息前(resultBefore)：批量修改测试报告、批量修改推送信息、定义推送规则、自定义推送 api\\n\\n\\n生成报告&发送消息后(resultAfter)：自定义 api\\n\\n\\n\\nconfig\\n\\ncallBack(param1,param2) `tapable`暴露的周期函数\\nparam1\\n\\nparam2(插件修改返回值)\\n\\n压力\\n压力测试插件执行流程图\\n![stress](../img/plugin/ab.png)\\n\\n生命周期钩子\\n\\n\\n初始化参数前(initBefore)：自定义是否需要执行、 自定义 api、 修改配置参数(设置 无头模式，性能分析，行为快照，开启调试，高就配置，插件，超时时间)。\\n\\n\\n单步执行前(stepBefore)：单个定义过滤执行用例（满足条件）、单个修改参数（在文件中查找）、链接数据库断言、单个自定义断言、自定义 api。\\n\\n\\n完成参数初始化且请求前(requesBefore):修改请求头，请求体，或终止操作\\n\\n\\n压力测试单步请求前(stepAbBefore)：\\n\\n\\n压力测试单步请求后(stepAbAfter)：\\n\\n\\n请求返回后(requestAfter):修改返回值\\n\\n\\n单步执行后(stepAfter)：单个修改断言、单个替换断言、链接数据库断言、自定义 api。\\n\\n\\n生成报告&发送消息前(resultBefore)：批量修改测试报告、批量修改推送信息、定义推送规则、自定义推送 api\\n\\n\\n生成报告&发送消息后(resultAfter)：自定义 api\\n\\n\\n\\n<!--\\n开始前：修改配置参数、自定义是否需要执行\\n开始后：修改配置参数、自定义是否需要执行\\n单步前：定义过滤执行用例（满足条件）、修改参数（在文件中查找）、数据库断言、自定义断言；\\n单步后：修改断言，替换断言\\n报告前：修改测试报告，修改推送信息，自定义推送规则，自定义推送 api\\n包告后：修改推送信息，自定义推送规则，自定义推送 api\\n-->\\n\"}},\"/./application/code\":{\"#/./application/code?id=%e9%94%99%e8%af%af%e4%bf%a1%e6%81%af%e5%88%97%e8%a1%a8\":{\"slug\":\"#/./application/code?id=%e9%94%99%e8%af%af%e4%bf%a1%e6%81%af%e5%88%97%e8%a1%a8\",\"title\":\"错误信息列表\",\"body\":\"为了方便使用者对错误的判断定位，我们引入了自定义的错误状态码信息，方便错误信息的定位.\\n\\n\"}},\"/./application/ete\":{\"#/./application/ete?id=ete\":{\"slug\":\"#/./application/ete?id=ete\",\"title\":\"ETE\",\"body\":\"?> 为页面测试而生， 彻底解决页面测试的繁琐操作，提升测试乐趣！\\n\\n<iframe src=\\\"//player.bilibili.com/player.html?aid=759967057&bvid=BV1764y1v7is&cid=392078147&page=1\\\" scrolling=\\\"no\\\" border=\\\"0\\\" frameborder=\\\"no\\\" framespacing=\\\"0\\\" framespacing=\\\"0\\\"  height=\\\"600\\\"  style=”width: 100%;height: 500px; max-width: 100%;align:center;padding:20px 0;” > </iframe>\\n\\n\"},\"#/./application/ete?id=%e8%a7%a3%e5%86%b3%e7%97%9b%e7%82%b9\":{\"slug\":\"#/./application/ete?id=%e8%a7%a3%e5%86%b3%e7%97%9b%e7%82%b9\",\"title\":\"解决痛点\",\"body\":\"市面上的 ete 测试框架很多，但对许多测试人员的编码能力有一定的要求，而且随着业务复杂度的提高，每一次迭代都可能导致重新编写测试脚本修改，可维护性很差，迁移能力较弱，测试成本高，结合以上问题，我们对 ete 测试框架做了二次封装，尽可能减少对测试人员编码的要求，满足日常多场景的测试，需要测试人员在 chrome 浏览器在开启 eTest 脚本录制工具，进行操作，便可生成测试人员想要的测试脚本，解放测试人员的臃肿烦躁的重复测试场景，让 ete 测试变的充满乐趣。使测试人员有更多的精力做更深层次的测试。\\n\"},\"#/./application/ete?id=%e6%b5%81%e7%a8%8b%e8%ae%be%e8%ae%a1%e5%9b%be\":{\"slug\":\"#/./application/ete?id=%e6%b5%81%e7%a8%8b%e8%ae%be%e8%ae%a1%e5%9b%be\",\"title\":\"流程设计图\",\"body\":\"浏览器录制脚本流程图\\n![logo](../img/chrome.png)\\n\\nete 测试，需要依赖操作者操作，收集录制脚本信息，所以需要安装 chrome 插件，通过启用插件，收集用户操作信息，生成 ete 测试需要的脚本文件。\\n\\n!> Chrome 插件下载方式 [eTest 插件商店下载](https://chrome.google.com/webstore/detail/etest/nkjmdclbdiljcaeepkclamgboojhdnhi?hl=zh-CN) 或者 [eTest github 下载](https://github.com/onepiece-smile/docs/releases)\\n\\nETE 执行脚本流程图\\n![logo](../img/etetest.png)\\n\"},\"#/./application/ete?id=%e6%94%af%e6%8c%81%e5%8a%9f%e8%83%bd\":{\"slug\":\"#/./application/ete?id=%e6%94%af%e6%8c%81%e5%8a%9f%e8%83%bd\",\"title\":\"支持功能\",\"body\":\"支持 iframe 多嵌套操作 , 支持动态 iframe 插入问题 :heavy_check_mark:\\n\\n\\n支持关闭 alert 提示 :heavy_check_mark:\\n\\n\\n支持等待 dom 元素显示 :heavy_check_mark:\\n\\n\\n支持页面断言操作，数字类型的大于小于等于操作 :heavy_check_mark:\\n\\n\\n支持生成测试报告 :heavy_check_mark:\\n\\n\\n支持运行时页面错误收集 :heavy_check_mark:\\n\\n\\n支持延时操作处理 :heavy_check_mark:\\n\\n\\n支持无头模式 :heavy_check_mark:\\n\\n\\n支持等待网络加载完成后操作 :heavy_check_mark:\\n\\n\\n支持阻止默认事件后，依然可以获取事件操作 :heavy_check_mark:\\n\\n\\n支持事件被阻止依旧可以收集 :heavy_check_mark:\\n\\n\\n支持错误截图 :heavy_check_mark:\\n\\n\\n支持在线修改 json 数据 :heavy_check_mark:\\n\\n\\n支持用例拖拽排序 :heavy_check_mark:\\n\\n\\n支持导出性能优化报告（lighthouse） :heavy_check_mark:\\n\\n\\n支持收集浏览器的前进后退刷新操作 :heavy_check_mark:\\n\\n\\n支持多 tab 页间的切换 :heavy_check_mark:\\n\\n\\n支持测试用例每一步的操作截图 :heavy_check_mark:\\n\\n\\n支持高级配置自定义对输入、断言修改 :heavy_check_mark:\\n\\n\\n支持获取页面的文本设置当前执行的变量 :heavy_check_mark:\\n\\n\\n支持自动收集页面滚动数据 :heavy_check_mark:\\n\\n\\n支持页面快捷键操作 :heavy_check_mark:\\n\\n\\n支持分组维护 :heavy_check_mark:\\n\\n\\n支持文件重命名 :heavy_check_mark:\\n\\n\\n支持导入导出文件信息 :heavy_check_mark:\\n\\n\\n支持设置缓存信息 :heavy_check_mark:\\n\\n\\n支持可视区域生成图片对比生成测试结果 :heavy_check_mark:\\n\\n\\n支持脚本回放调试 :heavy_check_mark:\\n\\n\\n支持自定义函数、自定义插件扩展:white_check_mark:\\n\\n\\n\"},\"#/./application/ete?id=%e5%bf%ab%e9%80%9f%e5%bc%80%e5%a7%8b\":{\"slug\":\"#/./application/ete?id=%e5%bf%ab%e9%80%9f%e5%bc%80%e5%a7%8b\",\"title\":\"快速开始\",\"body\":\"下载 chrome 插件\\n!> Chrome 插件下载方式 [eTestv1.3.4 github 下载](https://github.com/alltheblue/docs/releases)\\n\\n设置插件开启无痕模式\\n![录制脚本文件](../img/ete/ete22.jpeg '::etest-col-5')\\n\\n打开浏览器`管理扩展程序`选择`eTest`插件，点击`详情`，打开`在无痕模式下启用`，即可。\\n\\n![录制脚本文件](../img/ete/ete23.jpeg '::etest-col-8')\\n![录制脚本文件](../img/ete/ete21.png '::etest-col-8')\\n\\n录制脚本文件\\n![录制脚本文件](../img/chrome/chrome01.png '::etest-col-8')\\n\\n打开右上角的 chrome 插件 点击小图标出现 `start` 状态，表示已启动测试脚本录制\\n\\n?> 由于在脚本回放打开的是无痕浏览模式，所以在录制脚本的时候请先清除历史记录和缓存数据，以保证回放的时候的正确性，或者开启无痕模式录制脚本信息\\n\\n![录制脚本文件](../img/chrome/chrome02.png '::etest-col-8')\\n\\n点击网页操作，eTest 插件提示 `添加一条操作事件` ，说明 eTest 插件正在记录用户在页面的操作。\\n\\n!> 点击时间， 文本框，下拉框改变 都会触发该动作\\n\\n![录制脚本文件](../img/chrome/chrome03.png '::etest-col-8')\\n\\n选中文本，鼠标右键，选择期望的断言结果\\n\\n断言值\\n根据用户选中的文本自动判断 `string`或者 `number`类型，然后自动生成需要的测试用例菜单列表，\\n\\n**注意**\\n\\n\\n\\n选择文本时，会自动选择当前标签内的全部内容。\\n\\n\\n如果选中的文本是含有两个相邻标签的内容，则会默认选中第一个标签的全部内容。\\n\\n\\n如果选中的文本内部包含多个标签 则会判断满足一定条件 最多 3 个子标签并且小于 200 字以内。\\n\\n\\n\\n事件\\n\\n\\nload: 刷新\\n\\n\\nclick:单击事件\\n\\n\\ndbclick:双击事件\\n\\n\\nhover:鼠标 hover\\n\\n\\nscroll:滚动至此\\n\\n\\n生成全局变量\\n\\n\\n\\n!> 高级用法 `生成全局变量` 在需要的一些场景需要对页面的值做输入处理\\n\\n文本断言\\n\\n\\ninclude:包含当前值\\n\\n\\nexclude:不包含当前值\\n\\n\\n\\n数字断言\\n\\n\\ngreater：大于当前值\\n\\n\\nequal：等于 当前值\\n\\n\\nless：小于当前值\\n\\n\\n\\n属性值断言(class、id、data、 type....)\\n\\n\\ninclude:包含当前值\\n\\n\\nexclude:不包含当前值\\n\\n\\n\\n![属性值断言](../img/chrome/chrome05.jpeg '::etest-col-8')\\n\\n点击右上 eTest 图标，结束测试脚本录制，并且生成测试脚本文件，下载到本地\\n\\n!> 如果测试脚本用例小于 2 条，则不会生成脚本信息\\n\\n生成脚本文件\\n通过`chrome`插件生成的脚本文件如下格式：\\n\\n[\\n  {\\n    \\\"active\\\": true,\\n    \\\"audible\\\": false,\\n    \\\"autoDiscardable\\\": true,\\n    \\\"discarded\\\": false,\\n    \\\"favIconUrl\\\": \\\"https://www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg\\\",\\n    \\\"groupId\\\": -1,\\n    \\\"height\\\": 882,\\n    \\\"highlighted\\\": true,\\n    \\\"id\\\": 83891737,\\n    \\\"incognito\\\": false,\\n    \\\"index\\\": 64,\\n    \\\"mutedInfo\\\": { \\\"muted\\\": false },\\n    \\\"openerTabId\\\": 83891734,\\n    \\\"pinned\\\": false,\\n    \\\"selected\\\": true,\\n    \\\"status\\\": \\\"complete\\\",\\n    \\\"title\\\": \\\"百度一下，你就知道\\\",\\n    \\\"url\\\": \\\"https://www.baidu.com/\\\",\\n    \\\"width\\\": 1680,\\n    \\\"windowId\\\": 83891251,\\n    \\\"action\\\": \\\"start\\\",\\n    \\\"indexNum\\\": 0,\\n    \\\"date\\\": 1678243527820,\\n    \\\"userAgent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36\\\",\\n    \\\"cookies\\\": [\\n      {\\n        \\\"domain\\\": \\\"www.baidu.com\\\",\\n        \\\"expirationDate\\\": 1711066469,\\n        \\\"hostOnly\\\": true,\\n        \\\"httpOnly\\\": false,\\n        \\\"name\\\": \\\"MSA_WH\\\",\\n        \\\"path\\\": \\\"/\\\",\\n        \\\"sameSite\\\": \\\"unspecified\\\",\\n        \\\"secure\\\": false,\\n        \\\"session\\\": false,\\n        \\\"storeId\\\": \\\"0\\\",\\n        \\\"value\\\": \\\"3901244\\\"\\n      }\\n    ],\\n    \\\"localStorage\\\": {\\n      \\\"BAIDU_PRIVATE\\\": \\\"16ww496207\\\",\\n      \\\"squarePop\\\": \\\"1\\\",\\n      \\\"___ds_storage__eqid\\\": \\\"xxx|1679995377511\\\",\\n      \\\"index_ls_qid\\\": \\\"xxx\\\"\\n    },\\n    \\\"sessionStorage\\\": {\\n      \\\"BAIDU_PRIVATE\\\": \\\"xxx\\\"\\n    },\\n\\n    \\\"isMobile\\\": false,\\n    \\\"hasTouch\\\": false,\\n    \\\"deviceScaleFactor\\\": 1,\\n    \\\"type\\\": \\\"start\\\"\\n  },\\n  {\\n    \\\"x\\\": 505.5,\\n    \\\"y\\\": 211.671875,\\n    \\\"url\\\": \\\"https://www.baidu.com/\\\",\\n    \\\"date\\\": 1678243529332,\\n    \\\"height\\\": 44,\\n    \\\"xpath\\\": \\\"//*[@id=\\\\\\\"kw\\\\\\\"]\\\",\\n    \\\"width\\\": 550,\\n    \\\"value\\\": \\\"\\\",\\n    \\\"clientX\\\": 695,\\n    \\\"clientY\\\": 234,\\n    \\\"selector\\\": \\\"document > html > body > div > div > div > div > div > form > span > input\\\",\\n    \\\"iframe\\\": \\\"\\\",\\n    \\\"indexNum\\\": 1,\\n    \\\"innerHtml\\\": \\\"\\\",\\n    \\\"localName\\\": \\\"input\\\",\\n    \\\"localNameType\\\": \\\"text\\\",\\n    \\\"type\\\": \\\"click\\\"\\n  },\\n  {\\n    \\\"x\\\": 505.5,\\n    \\\"y\\\": 211.671875,\\n    \\\"url\\\": \\\"https://www.baidu.com/\\\",\\n    \\\"date\\\": 1678243539976,\\n    \\\"height\\\": 38,\\n    \\\"xpath\\\": \\\"//*[@id=\\\\\\\"kw\\\\\\\"]\\\",\\n    \\\"width\\\": 471,\\n    \\\"value\\\": \\\"你好\\\",\\n    \\\"clientX\\\": 695,\\n    \\\"clientY\\\": 234,\\n    \\\"selector\\\": \\\"document > html > body > div > div > div > div > div > form > span > input\\\",\\n    \\\"iframe\\\": \\\"\\\",\\n    \\\"indexNum\\\": 2,\\n    \\\"innerHtml\\\": \\\"\\\",\\n    \\\"localName\\\": \\\"input\\\",\\n    \\\"localNameType\\\": \\\"text\\\",\\n    \\\"type\\\": \\\"change\\\"\\n  },\\n  {\\n    \\\"x\\\": 725,\\n    \\\"y\\\": 15,\\n    \\\"url\\\": \\\"https://www.baidu.com/\\\",\\n    \\\"date\\\": 1678243540156,\\n    \\\"height\\\": 40,\\n    \\\"xpath\\\": \\\"//*[@id=\\\\\\\"su\\\\\\\"]\\\",\\n    \\\"width\\\": 112,\\n    \\\"value\\\": \\\"百度一下\\\",\\n    \\\"clientX\\\": 783,\\n    \\\"clientY\\\": 36,\\n    \\\"selector\\\": \\\"document > html > body > div > div > div > div > div > form > span > input\\\",\\n    \\\"iframe\\\": \\\"\\\",\\n    \\\"indexNum\\\": 3,\\n    \\\"innerHtml\\\": \\\"\\\",\\n    \\\"localName\\\": \\\"input\\\",\\n    \\\"localNameType\\\": \\\"submit\\\",\\n    \\\"type\\\": \\\"click\\\"\\n  },\\n  {\\n    \\\"userAgent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36\\\",\\n    \\\"isMobile\\\": false,\\n    \\\"hasTouch\\\": false,\\n    \\\"deviceScaleFactor\\\": 1,\\n    \\\"type\\\": \\\"start\\\",\\n    \\\"active\\\": true,\\n    \\\"audible\\\": false,\\n    \\\"autoDiscardable\\\": true,\\n    \\\"discarded\\\": false,\\n    \\\"favIconUrl\\\": \\\"https://www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg\\\",\\n    \\\"groupId\\\": -1,\\n    \\\"height\\\": 882,\\n    \\\"highlighted\\\": true,\\n    \\\"id\\\": 83891737,\\n    \\\"incognito\\\": false,\\n    \\\"index\\\": 64,\\n    \\\"mutedInfo\\\": { \\\"muted\\\": false },\\n    \\\"openerTabId\\\": 83891734,\\n    \\\"pinned\\\": false,\\n    \\\"selected\\\": true,\\n    \\\"status\\\": \\\"complete\\\",\\n    \\\"title\\\": \\\"百度一下，你就知道\\\",\\n    \\\"url\\\": \\\"https://www.baidu.com/s?wd=%E4%BD%A0%E5%A5%BD&rsv_spt=1&rsv_iqid=0xece676f10009f696&issp=1&f=8&rsv_bp=1&rsv_idx=2&ie=utf-8&tn=baiduhome_pg&rsv_enter=0&rsv_dl=tb&rsv_sug3=10&rsv_sug1=10&rsv_sug7=101&sug=%25E4%25BD%25A0%25E5%25A5%25BD%2520%25E6%259D%258E%25E7%2584%2595%25E8%258B%25B1&rsv_n=1&rsv_btype=i&prefixsug=%25E4%25BD%25A0%25E5%25A5%25BD&rsp=0&inputT=9238&rsv_sug4=10826\\\",\\n    \\\"width\\\": 1680,\\n    \\\"windowId\\\": 83891251,\\n    \\\"action\\\": \\\"replacePage\\\",\\n    \\\"indexNum\\\": 4,\\n    \\\"date\\\": 1678243540180\\n  },\\n  {\\n    \\\"xpath\\\": \\\"//html\\\",\\n    \\\"iframe\\\": \\\"\\\",\\n    \\\"selector\\\": \\\"document\\\",\\n    \\\"scrollTop\\\": 594,\\n    \\\"scrollLeft\\\": 0,\\n    \\\"type\\\": \\\"scrollWin\\\",\\n    \\\"url\\\": \\\"https://www.baidu.com/s?wd=%E4%BD%A0%E5%A5%BD&rsv_spt=1&rsv_iqid=0xece676f10009f696&issp=1&f=8&rsv_bp=1&rsv_idx=2&ie=utf-8&tn=baiduhome_pg&rsv_enter=0&rsv_dl=tb&rsv_sug3=10&rsv_sug1=10&rsv_sug7=101&sug=%25E4%25BD%25A0%25E5%25A5%25BD%2520%25E6%259D%258E%25E7%2584%2595%25E8%258B%25B1&rsv_n=1&rsv_btype=i&prefixsug=%25E4%25BD%25A0%25E5%25A5%25BD&rsp=0&inputT=9238&rsv_sug4=10826\\\",\\n    \\\"indexNum\\\": 5,\\n    \\\"date\\\": 1678243545352\\n  }\\n]\\n关键 key\\n\\nete 录入脚本&启动\\n![ete 设置](../img/ete/ete26.jpeg '::etest-col-8')\\n\\n打开集成测试 `创建项目`然后`点击项目 进入ETE`,可以通过点击新增 导入文件或者创建分组\\n\\n!> **注意**：导入文件会覆盖项目下的 ete 之前维护的脚本文件，请谨慎操作\\n\\n![ete 设置](../img/ete/ete27.jpeg '::etest-col-8')\\n\\n新建分组，有利于分类归纳维护测试脚本文件，\\n\\n![ete 设置](../img/ete/ete28.jpeg '::etest-col-8')\\n\\n上传测试脚本文件后可以按照分组归纳，如果需要调整分组，文件排序 按住 `分组`, `文件` 拖动即可实现排序,\\n\\n!> 注意：测试的文件需按顺序执行，如果出现断层则会影响测试结果。\\n\\n![ete 设置](../img/ete/ete24.jpeg '::etest-col-8')\\n\\n测试文件上传时默认 `选中`; 如果没有勾选选中，在执行测试用例的过程中，则不被执行当前测试文件 支持 `分组`、`单个脚本`勾选\\n\\n![ete 设置](../img/ete/ete29.jpeg '::etest-col-8')\\n\\n对`分组`、`脚本`的 `删除` 、`重命名` 操作，对后续的展示测试报告的时，更加友好\\n\\n![ete 设置](../img/ete/ete04.jpeg '::etest-col-8')\\n\\n运行 ete 测试过程中，如果需要停止任务，可点击 `停止运行`，结束此次运行，运行结束后，生成测试报告`报告名称` 是项目名称加当前时间拼接成的，模式分为`自动`和`手动` 两种模式，自动：是定时任务运行的；手动：是用户自己运行的用例；\\n\\n测试结果\\n![ete 设置](../img/ete/ete04.jpeg '::etest-col-8')\\n\\n测试报告列表，会展示一些关键信息 ,`断言结果`,`请求错误`,`页面错误`,`用时` 汇总信息\\n\\n![ete 设置](../img/ete/ete30.jpg '::etest-col-8')\\n\\n展示测试报告详情，解析也页面 `断言结果`、 `请求接口错误` 、`页面错误` ，如果断言结果发生； 错误，则会**截图**展示错误结果，方便开发者查看断言错误原因；断言结果通过分组+ 脚本名称+ 脚本索引，可以更加快速的定位到测试脚本信息，页面在执行的过程中，出现了请求错误，则会抓取请求地址以及错误类型，展现在页面上； 页面错误：在运行 ete 过程中出现的错误，加载超时、找不到元素等，都会被列举出来。\\n\\n全局配置\\n设置`性能分析`后，ete 在测试结束时也会导出页面性能的分析报告，开发人员可以通过分析报告，参考[web.dev](https://web.dev/performance-scoring/?utm_source=lighthouse&utm_medium=node)完成对页面的性能优化，提升了页面的加载性能的优化。\\n\\n![ete 设置](../img/ete/ete08.jpeg '::etest-col-8')\\n\\n点击 `文件名称`,弹出测试用例详细信息，可以对 测试用例文件进行简单的编辑操作，如`assertions` 表示断言信息，`assertions.action`表示断言结果, 如果熟悉[**断言** ](#断言值)可直接修改断言信息，保存运行提高测试的执行效率\\n\\n{\\n  \\\"editable\\\": false,\\n  \\\"frameId\\\": 0,\\n  \\\"linkUrl\\\": \\\"http://news.baidu.com/\\\",\\n  \\\"menuItemId\\\": \\\"include\\\",\\n  \\\"pageUrl\\\": \\\"https://www.baidu.com/\\\",\\n  \\\"selectionText\\\": \\\"新闻\\\",\\n  \\\"type\\\": \\\"assert\\\",\\n  \\\"xpath\\\": \\\"//*[@id=\\\\\\\"s-top-left\\\\\\\"]\\\",\\n  \\\"iframe\\\": \\\"\\\",\\n  \\\"assertions\\\": {\\n    \\\"value\\\": \\\"新闻\\\",\\n    \\\"action\\\": \\\"include\\\"\\n  },\\n  \\\"indexNum\\\": 12\\n}\\n!> 如果修改的测试用例信息过多，建议重新录制脚本信息，防止文件执行过程报错，影响测试结果。\\n\\n![ete 添加全局配置](../img/ete/ete25.jpg '::etest-col-8')\\n\\n\\n\\n无头模式：配置启动测试是否自动在无头模式下运行 默认是 `fasle`\\n\\n\\n开启调试：配置开启调试模式后，仅在手动执行下生效，需要通过快捷键`ctrl+f`执行下一步默认是 `fasle`\\n\\n\\n性能分析： 浏览器测试时，是否收集性能分析报告，**定时任务不会开启性能分析** 默认是 `fasle`\\n\\n\\n行为快照： 对于页面的每一步操作都会生成快照,待用力执行完毕后，会自动导出到桌面，**定时任务不会开启行为快照** ，默认是 `fasle`\\n\\n\\n设置缓存：`cookies`、`localStorage`中，这种情况只要开启此功能，会在开启页面的时候将数据塞进浏览器中，对 `sessionStorage`缓存无效，并且多个脚本同一个 `key`不同的`value`有优先使用第一个，\\n`cookies`、`localStorage`中，这种情况只要开启此功能，会在开启页面的时候将数据塞进浏览器中，对 `sessionStorage`缓存无效，并且多个脚本同一个 `key`不同的`value`有优先使用第一个，\\n\\n\\n开启高级配置：`开启高级配置` 需要再`高级配置`中，配置环境变量，不开启`高级配置 `中的配置的变量不被生效\\n\\n\\n开启插件配置：`开启插件配置` 需要再`高级配置`中，配置插件配置，不开启`高级配置 `中的插件配置不被生效\\n\\n\\n开启环境配置： ：`开启环境配置：` 需要再`高级配置`中，配置环境配置，不开启`高级配置 `中的插件配置不被生效\\n\\n\\n超时时间：浏览器在操作时，等待下一个操作的最长时间 默认是 `60s`\\n\\n\\n延迟时间：由于一些特色场景需要设置长时间等待，最大不得超过`60s`， `延迟时间`与 `超时时间`同时设置延迟时间不得超过超时时间\\n\\n\\n\\n![添加全局配置](../img/ete/ete19.jpeg '::etest-col-8')\\n\\n高级配置\\n环境配置\\n对于多环境的测试问题，可以通过配置环境域名来实现在不同的环境下执行测试用例，但是需要保证在执行的测试用例的数据是一致的\\n\\n![高级配置](../img/ete/ete31.jpeg '::etest-col-8')\\n\\n首先配置需要区分的环境变量\\n\\n![高级配置](../img/ete/ete32.jpeg '::etest-col-8')\\n\\n添加需要配置的替换的环境名称\\n\\n![高级配置](../img/ete/ete33.jpeg '::etest-col-8')\\n\\n启用环境变量\\n\\n变量配置\\n再执行自动化测试任务中有些入参是不能重复提交的，这就导致了我们录入的脚本信息，再跑定时任务的过程中，需要自定义配置入参\\n\\n![高级配置](../img/ete/ete34.jpeg '::etest-col-8')\\n\\n\\n\\n手动新增环境变量\\n\\n\\n来源分为`手动设置`（可以自定义配置环境变量）、 `页面取值`（通过录制脚本，获取需要取值的文本作为环境变量使用，可以修改）\\n\\n\\n测试可以对于生成的环境变量取值是否符合预期\\n\\n\\n\\n变量名称： 必填 唯一长度不能超过 20 位\\n取值方式：非必填 测试工具提前内置的函数\\n固定值：非必填 `取值方式` 为`固定值`时显示该文本，可录入该值\\n合并方式： 分为 `前缀`、`后缀`、`替换` ，默认后缀；\\n\\n取值方式\\n\\n\\n固定值:自定义一个固定的值\\n\\n\\n页面取值： 脚本录制生成的变量（页面取值），自定义不可设置,\\n\\n\\n随机字母 2 位,\\n\\n\\n随机字母 4 位,\\n\\n\\n随机字母 6 位,\\n\\n\\n随机字母 8 位',\\n\\n\\n随机数 2 位',\\n\\n\\n随机数 4 位',\\n\\n\\n随机数 6 位',\\n\\n\\n随机数 8 位',\\n\\n\\n日期:分秒\\n\\n\\n日期:时分\\n\\n\\n日期:月日时\\n\\n\\n日期:月日时分\\n\\n\\n日期:年月日时分\\n\\n\\n日期:年月日时分秒\\n\\n\\n\\n![高级配置](../img/ete/ete35.jpeg '::etest-col-8')\\n\\n系统可设置环境变量的值为`value`，点击`value`既可以设置变量，选择需要设置的变量名称 保存即可\\n\\n插件配置\\n为了增强 ETE 测试功能，满足更多的测试场景，我们引入了扩展功能，方便测试自身设定的场景，我们提供自定义插件来满足需求；通过可插拔的使用方式，提升 ete 的扩展能力，全方位覆盖测试场景 可以参考[plugin](/application/plugin)。\\n\\n![高级配置](../img/ete/ete36.jpeg '::etest-col-8')\\n\\n![高级配置](../img/ete/ete37.jpeg '::etest-col-8')\\n\\n选择 插件需要执行的生命周期\\n\\n![高级配置](../img/ete/ete38.jpeg '::etest-col-8')\\n\\n?> 配置完成高级配置后，必须在全局配置开启 `开启高级配置`、`开启插件配置`、`开启环境配置` 总开关，否则高就配置就不会生效，\"}},\"/./application/ui\":{\"#/./application/ui?id=ui\":{\"slug\":\"#/./application/ui?id=ui\",\"title\":\"UI\",\"body\":\"<iframe src=\\\"//player.bilibili.com/player.html?aid=865632005&bvid=BV1654y1T7uF&cid=1044463115&page=1\\\" scrolling=\\\"no\\\" border=\\\"0\\\" frameborder=\\\"no\\\" framespacing=\\\"0\\\"  height=\\\"600\\\"  style=”width: 100%;height: 500px; max-width: 100%;align:center;padding:20px 0;”> </iframe>\\n\\n\"},\"#/./application/ui?id=%e8%a7%a3%e5%86%b3%e7%97%9b%e7%82%b9\":{\"slug\":\"#/./application/ui?id=%e8%a7%a3%e5%86%b3%e7%97%9b%e7%82%b9\",\"title\":\"解决痛点\",\"body\":\"对于 ui 设计稿的还原度，是 C 端开发人员的一个工作重点，设计稿还原的好坏对一个项目要求至关重要。而且在页面还原度的问题上，我们经常看到开发经常找 UI 设计师沟通，这就大大提高了沟通成本，导致后续的开发时间压缩；集成测试的 UI 还原功能可以减少开发与 UI 设计师的沟通成本，只需设计把 UI 设计稿与开发的页面按要求，导入集成测试中，然后就会生成测试报告，开发只要根据测试结果修改，就可以修改，节约沟通成本，大大提高了开发人员的效率。\\n\"},\"#/./application/ui?id=ui-%e8%bf%98%e5%8e%9f%e6%b5%8b%e8%af%95%e6%b5%81%e7%a8%8b%e5%9b%be\":{\"slug\":\"#/./application/ui?id=ui-%e8%bf%98%e5%8e%9f%e6%b5%8b%e8%af%95%e6%b5%81%e7%a8%8b%e5%9b%be\",\"title\":\"UI 还原测试流程图\",\"body\":\"![logo](../img/ui.png)\\n\"},\"#/./application/ui?id=%e5%8a%9f%e8%83%bd%e5%88%97%e8%a1%a8\":{\"slug\":\"#/./application/ui?id=%e5%8a%9f%e8%83%bd%e5%88%97%e8%a1%a8\",\"title\":\"功能列表\",\"body\":\"支持 UI 设计图和网页 url 比较 :heavy_check_mark:\\n\\n\\n支持 UI 设计图和截图比较 :heavy_check_mark:\\n\\n\\n支持运行还原测试时，排除掉某些项目 :heavy_check_mark:\\n\\n\\n支持批量新增 :heavy_check_mark:\\n\\n\\n支持设备类型设置，区分 PC 和 Mobile :heavy_check_mark:\\n\\n\\n支持自定义对比颜色 :heavy_check_mark:\\n\\n\\n支持生成测试报告 :heavy_check_mark:\\n\\n\\n支持自定义配置颜色 :heavy_check_mark:\\n\\n\\n支持自定义截图设置 cookie :heavy_check_mark:\\n\\n\\n支持在线对生成的对比图片做备注 :heavy_check_mark:\\n\\n\\n支持在线批量下载对比图片 :heavy_check_mark:\\n\\n\\n\"},\"#/./application/ui?id=%e5%bf%ab%e9%80%9f%e5%bc%80%e5%a7%8b\":{\"slug\":\"#/./application/ui?id=%e5%bf%ab%e9%80%9f%e5%bc%80%e5%a7%8b\",\"title\":\"快速开始\",\"body\":\"设置全局对比参数\\n\\n\\n选择设备类型，设置 dpr\\n\\n\\n设置差异对比时的颜色标注等\\n\\n\\n\\n![ui比对](../img/ui/01.png '::etest-col-8')\\n\\n如果有页面传参需求，可点击`参数配置`进行设置\\n\\n![ui比对](../img/ui/02.png '::etest-col-8')\\n\\n新增配置\\n切换至 UI 配置，点击新增，可选单个新增和批量新增\\n\\n![ui比对](../img/ui/03.png '::etest-col-8')\\n\\n单个新增\\n\\n\\n新增 url 与 ui 图比对，上传 ui 设计图，输入网址\\n\\n\\n\\n![ui比对](../img/ui/04.png '::etest-col-8')\\n\\n\\n\\n新增截图与 ui 图比对，点击右下角`使用图片对比`，上传 ui 设计图，上传开发完成的截图\\n\\n\\n\\n![ui比对](../img/ui/05.png '::etest-col-8')\\n\\n批量新增\\n\\n\\n将需要对比的图片批量上传\\n\\n\\n自行拖动到对应的区域，其中等待或者废弃区会在保存时丢弃\\n\\n\\n\\n![ui比对](../img/ui/06.png '::etest-col-8')\\n\\n![ui比对](../img/ui/07.png '::etest-col-8')\\n\\n运行测试\\n对比设置完毕，点击`开始运行UI还原测试`，即可生成对应的测试报告\\n\\n![ui比对](../img/ui/08.png '::etest-col-8')\\n\\n报告列表\\n测试报告列表，操作栏从左到右分别是 查看报告详情 | 图片备注 | 下载 | 删除\\n\\n![ui比对](../img/ui/09.png '::etest-col-8')\\n\\n点击`查看报告详情`，即可看到还原度信息，原型图、网页截图、差异对比图的展示\\n\\n![ui比对](../img/ui/10.png '::etest-col-8')\\n\\n点击`图片备注`， 即可对每张图片进行备注，方便开发人员和测试人员直接在图片上沟通\\n\\n![ui比对](../img/ui/11.png '::etest-col-8')\\n\\n点击`下载`， 即可将所有图片下载打包\\n\\n![ui比对](../img/ui/12.png '::etest-col-8')\\n\\n点击`删除`， 即可删除当前生成的报告\"}},\"/./application/example\":{\"#/./application/example?id=%e5%bf%ab%e9%80%9f%e5%bc%80%e5%a7%8b\":{\"slug\":\"#/./application/example?id=%e5%bf%ab%e9%80%9f%e5%bc%80%e5%a7%8b\",\"title\":\"快速开始\",\"body\":\"\"},\"#/./application/example?id=%e6%96%b0%e5%bb%ba%e9%a1%b9%e7%9b%ae\":{\"slug\":\"#/./application/example?id=%e6%96%b0%e5%bb%ba%e9%a1%b9%e7%9b%ae\",\"title\":\"新建项目\",\"body\":\"![新建项目](../img/group/group03.jpeg '::etest-col-8')\\n\\n点击 **新建项目** 创建需要测试的项目名称，如果对 [**定时任务** ](#定时任务配置)配置了定时任务，如果需要及时收到测试结果，可以配置[**钉钉推送**](#设置钉钉推送)\\n\\n!> 目前支持钉钉消息推送，后续计划引入企业微信\\n\"},\"#/./application/example?id=%e8%ae%be%e7%bd%ae%e9%92%89%e9%92%89%e6%8e%a8%e9%80%81\":{\"slug\":\"#/./application/example?id=%e8%ae%be%e7%bd%ae%e9%92%89%e9%92%89%e6%8e%a8%e9%80%81\",\"title\":\"设置钉钉推送\",\"body\":\"创建钉钉项目群\\n![创建钉钉项目群](../img/dingding/ding01.jpeg '::etest-col-8')\\n![创建钉钉项目群](../img/dingding/ding02.jpeg '::etest-col-8')\\n\\n引入项目只能助手\\n![引入项目只能助手](../img/dingding/ding04.jpeg '::etest-col-8')\\n![引入项目只能助手](../img/dingding/ding05.jpeg '::etest-col-8')\\n![引入项目只能助手](../img/dingding/ding06.jpeg '::etest-col-8')\\n![引入项目只能助手](../img/dingding/ding07.jpeg '::etest-col-8')\\n![引入项目只能助手](../img/dingding/ding08.jpeg '::etest-col-8')\\n\\n安全配置勾选 `加签` ,然后妥善保存密钥， [**新建项目** ](#新建项目)中的 钉钉消息推送需要该值\\n\\n![引入项目只能助手](../img/dingding/ding09.jpeg '::etest-col-8')\\n\\n复制 url 连接，获取 url 的参数 token\\n\"},\"#/./application/example?id=%e5%88%9b%e5%bb%ba%e9%a3%9e%e4%b9%a6%e9%a1%b9%e7%9b%ae%e7%be%a4\":{\"slug\":\"#/./application/example?id=%e5%88%9b%e5%bb%ba%e9%a3%9e%e4%b9%a6%e9%a1%b9%e7%9b%ae%e7%be%a4\",\"title\":\"创建飞书项目群\",\"body\":\"![创建飞书项目群](../img/feishu/001.jpeg '::etest-col-8')\\n![创建飞书项目群](../img/feishu/002.jpeg '::etest-col-8')\\n\\n![创建飞书项目群](../img/feishu/003.jpeg '::etest-col-8')\\n\\n复制 url 连接，获取 url 的参数 token,安全设置勾选 `签名校验` ,然后妥善保存密钥\\n\"},\"#/./application/example?id=%e5%ae%9a%e6%97%b6%e4%bb%bb%e5%8a%a1%e9%85%8d%e7%bd%ae\":{\"slug\":\"#/./application/example?id=%e5%ae%9a%e6%97%b6%e4%bb%bb%e5%8a%a1%e9%85%8d%e7%bd%ae\",\"title\":\"定时任务配置\",\"body\":\"![定时任务配置](../img/task/task01.jpeg '::etest-col-8')\\n![定时任务配置](../img/task/task02.jpeg '::etest-col-8')\\n\\n支持 ete、api、压力三种功能；项目支持多选；可以配置重复执行（每周一、每周二、04 时、23 时），或者仅当前的某一时刻执行（16 时），如果没有勾选，说明当天的指定时间内运行定时任务\\n\\n!> 如果定时任务执行过程中，网络错误或者服务器问题，导致的错误，自动间隔 30 分钟在执行一次\\n\"},\"#/./application/example?id=%e6%94%af%e6%8c%81%e5%8a%9f%e8%83%bd\":{\"slug\":\"#/./application/example?id=%e6%94%af%e6%8c%81%e5%8a%9f%e8%83%bd\",\"title\":\"支持功能\",\"body\":\"支持获取当前网络状态 :heavy_check_mark:\\n\\n\\n支持请求错误数据收集汇总 :heavy_check_mark:\\n\\n\\n支持定时测试任务 :heavy_check_mark:\\n\\n\\n设置定时任务错误阀值 80% :heavy_check_mark:\\n\\n\\n旧版本提示更新 :heavy_check_mark:\\n\\n\\n导出测试报告 :heavy_check_mark:\\n\\n\\n飞书消息推送 :heavy_check_mark:\\n\\n\\n导出项目 :heavy_check_mark:\\n\\n\"}}}"},"sessionStorage":{"Hm_lpvt_6945ed53b4af93b07dce4fc30c1c627c":"1689244941"},"userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36","isMobile":false,"hasTouch":false,"deviceScaleFactor":1,"type":"start"},{"editable":false,"frameId":0,"menuItemId":"[\"include\",\"一个简单易用的集成测试框架\"]","pageUrl":"https://alltheblue.github.io/docs/#/","selectionText":"一个简单易用的集成测试框架","type":"assert","xpath":"//html/body/section/div[1]/blockquote/p","selector":"document > html > body > section > div > blockquote > p","iframe":"","clientX":593,"clientY":546,"localName":"p","x":56,"y":529.890625,"width":1069,"height":24,"assertions":{"value":"一个简单易用的集成测试框架","action":"include"},"innerHtml":"一个简单易用的集成测试框架","url":"https://alltheblue.github.io/docs/#/","indexNum":1,"date":1689244954713},{"xpath":"//html","iframe":"","selector":"document","scrollTop":608,"scrollLeft":0,"type":"scrollWin","url":"https://alltheblue.github.io/docs/#/","indexNum":2,"date":1689244960511},{"xpath":"//html","iframe":"","selector":"document","scrollTop":719,"scrollLeft":0,"type":"scrollWin","url":"https://alltheblue.github.io/docs/#/","indexNum":3,"date":1689244961191},{"xpath":"//html","iframe":"","selector":"document","scrollTop":946,"scrollLeft":0,"type":"scrollWin","url":"https://alltheblue.github.io/docs/#/","indexNum":4,"date":1689244962056},{"xpath":"//html","iframe":"","selector":"document","scrollTop":115,"scrollLeft":0,"type":"scrollWin","url":"https://alltheblue.github.io/docs/#/","indexNum":5,"date":1689244964943},{"x":1011.890625,"y":30,"url":"https://alltheblue.github.io/docs/#/","date":1689244968270,"height":20,"xpath":"//html/body/nav/ul/li[2]/a","width":48.90625,"clientX":1028,"clientY":39,"selector":"document > html > body > nav > ul > li > a","iframe":"","indexNum":6,"innerHtml":"version","localName":"a","localNameType":"","type":"click"},{"active":true,"audible":false,"autoDiscardable":true,"discarded":false,"favIconUrl":"https://alltheblue.github.io/docs/img/icon.ico","groupId":-1,"height":751,"highlighted":true,"id":83958846,"incognito":true,"index":0,"mutedInfo":{"muted":false},"pinned":false,"selected":true,"status":"complete","title":"eTest-集成测试","url":"https://alltheblue.github.io/docs/#/about/","width":1196,"windowId":83958845,"cookies":[{"domain":".alltheblue.github.io","expirationDate":1720780920,"hostOnly":false,"httpOnly":false,"name":"Hm_lvt_6945ed53b4af93b07dce4fc30c1c627c","path":"/docs/#/","sameSite":"unspecified","secure":false,"session":false,"storeId":"0","value":"1688090290,1689074856"},{"domain":".alltheblue.github.io","hostOnly":false,"httpOnly":false,"name":"Hm_lpvt_6945ed53b4af93b07dce4fc30c1c627c","path":"/docs/#/","sameSite":"unspecified","secure":false,"session":true,"storeId":"0","value":"1689244921"},{"domain":".alltheblue.github.io","expirationDate":1720610856,"hostOnly":false,"httpOnly":false,"name":"Hm_lvt_6945ed53b4af93b07dce4fc30c1c627c","path":"/","sameSite":"unspecified","secure":false,"session":false,"storeId":"0","value":"1688090290,1689074856"},{"domain":".alltheblue.github.io","hostOnly":false,"httpOnly":false,"name":"Hm_lpvt_6945ed53b4af93b07dce4fc30c1c627c","path":"/","sameSite":"unspecified","secure":false,"session":true,"storeId":"0","value":"1689074856"}],"action":"replacePage","date":1689244968295},{"editable":false,"frameId":0,"linkUrl":"https://alltheblue.github.io/docs/#/about/?id=%e7%b3%bb%e7%bb%9f%e6%9b%b4%e6%96%b0%e4%bf%a1%e6%81%af","menuItemId":"[\"include\",\"系统更新信息\"]","pageUrl":"https://alltheblue.github.io/docs/#/about/","selectionText":"系统更新信息","type":"assert","xpath":"//*[@id=\"系统更新信息\"]/a/span","selector":"document > html > body > main > section > article > h1 > a > span","iframe":"","clientX":508,"clientY":107,"localName":"span","x":404.59375,"y":93,"width":192,"height":40,"assertions":{"value":"系统更新信息","action":"include"},"innerHtml":"系统更新信息","url":"https://alltheblue.github.io/docs/#/about/","indexNum":8,"date":1689244976899},{"xpath":"//html","iframe":"","selector":"document","scrollTop":191,"scrollLeft":0,"type":"scrollWin","url":"https://alltheblue.github.io/docs/#/about/","indexNum":9,"date":1689244981073},{"xpath":"//html","iframe":"","selector":"document","scrollTop":812,"scrollLeft":0,"type":"scrollWin","url":"https://alltheblue.github.io/docs/#/about/","indexNum":10,"date":1689244981647},{"xpath":"//html","iframe":"","selector":"document","scrollTop":1231,"scrollLeft":0,"type":"scrollWin","url":"https://alltheblue.github.io/docs/#/about/","indexNum":11,"date":1689244982095},{"editable":false,"frameId":0,"linkUrl":"https://alltheblue.github.io/docs/#/about/quesion","menuItemId":"[\"exclude\",\"社区\"]","pageUrl":"https://alltheblue.github.io/docs/#/about/","selectionText":"社区","type":"assert","xpath":"//*[@id=\"main\"]/div/div/a/div[2]","selector":"document > html > body > main > section > article > div > div > a > div","iframe":"","clientX":1069,"clientY":679,"localName":"div","x":1041,"y":663.3125,"width":50.390625,"height":33,"assertions":{"value":"社区","action":"exclude"},"innerHtml":"社区","url":"https://alltheblue.github.io/docs/#/about/","indexNum":12,"date":1689244988722}]